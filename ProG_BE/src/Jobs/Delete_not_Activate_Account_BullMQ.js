import { Queue, Worker } from "bullmq";
import user from "../models/user.js";
import { ioRedisClient } from '../Config/redis.client.js';

const cleanupQueue = new Queue("cleanupQueue", { connection: ioRedisClient });

export const scheduleCleanupJob = async () => {
    try {
        await cleanupQueue.add("deleteUnverified", {}, {
            repeat: { cron: "0 0 * * *", tz: "Asia/Ho_Chi_Minh" } // Ch·∫°y l√∫c 00:00 theo gi·ªù Vi·ªát Nam
        });
        console.log("‚úÖ Job x√≥a t√†i kho·∫£n ch∆∞a active ƒë√£ ƒë∆∞·ª£c th√™m v√†o queue th√†nh c√¥ng!");
        console.log("‚è∞ Job s·∫Ω ch·∫°y t·ª± ƒë·ªông v√†o 00:00 h√†ng ng√†y (GMT+7)");
    } catch (error) {
        console.error("‚ùå L·ªói khi th√™m job v√†o queue:", error);
    }
}

new Worker("cleanupQueue", async () => {
    console.log("üî• ƒêang ch·∫°y cron job x√≥a t√†i kho·∫£n ch∆∞a active...");
    try {
        const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
        const result = await user.deleteMany({
            isActive: false,
            isCompromised: false,
            createdAt: { $lt: sevenDaysAgo }
        });

        console.log(`‚úÖ ƒê√£ x√≥a ${result.deletedCount} t√†i kho·∫£n ch∆∞a x√°c minh v√† kh√¥ng b·ªã x√¢m ph·∫°m.`);
    } catch (error) {
        console.error("‚ùå L·ªói khi x√≥a t√†i kho·∫£n ch∆∞a active:", error);
    }
}, { connection: ioRedisClient });

