/**
 * üì• Th√™m comment v√†o b√†i vi·∫øt
 * @param {String} postId - ID b√†i vi·∫øt
 * @param {String} content - N·ªôi dung comment
 * @param {String} parentComment - ID comment cha (n·∫øu c√≥)
 * @param {String} userId - ID ng∆∞·ªùi d√πng g·ª≠i comment
 * @returns {Promise<Object>} - K·∫øt qu·∫£ t·∫°o comment
 */

export const addCommentService = async (postId, content, parentComment, userId) => {
    try {
        // Ki·ªÉm tra b√†i vi·∫øt c√≥ t·ªìn t·∫°i kh√¥ng
        const post = await ForumPost.findById(postId);
        if (!post) {
            return { success: false, message: "B√†i vi·∫øt kh√¥ng t·ªìn t·∫°i" };
        }

        // T√≠nh to√°n ƒë·ªô s√¢u c·ªßa comment (0 n·∫øu kh√¥ng c√≥ parent, 1 n·∫øu c√≥ parent)
        const depth = parentComment ? 1 : 0;

        // T·∫°o comment m·ªõi
        const newComment = new Comment({
            content,
            author: userId,
            postId,
            postType: "ForumPost",
            parentComment,
            depth
        });

        // L∆∞u v√†o c∆° s·ªü d·ªØ li·ªáu
        await newComment.save();

        // Tr·∫£ v·ªÅ k·∫øt qu·∫£ th√†nh c√¥ng
        return { success: true, comment: newComment };
    } catch (error) {
        console.error(error);
        return { success: false, message: "L·ªói server khi t·∫°o comment", error };
    }
};