import mongoose from "mongoose";


const FavoriteListSchema = new mongoose.Schema({
    name: { type: String, required: true }, // T√™n danh s√°ch y√™u th√≠ch
    user: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true }, // Ch·ªß s·ªü h·ªØu danh s√°ch
    items: [
        {
            postId: { type: mongoose.Schema.Types.ObjectId, required: true },
            // postType: { type: mongoose.Schema.Types.ObjectId, ref: "PostType", required: true },
            // postType: { type: String, enum: ["Question", "ForumPost"], required: true },
            addedAt: { type: Date, default: Date.now },
            importantLevel: { type: Number, min: 1, max: 5, default: 3 }
        }
    ],
    createdAt: { type: Date, default: Date.now }
});

// üî• Middleware: Khi x√≥a danh s√°ch y√™u th√≠ch, x√≥a to√†n b·ªô item trong danh s√°ch
// FavoriteListSchema.pre("remove", async function (next) {
//     await mongoose.model("FavoriteItem").deleteMany({ listId: this._id });
//     next();
// });
// FavoriteListSchema.pre("remove", async function (next) {
//     // Duy·ªát qua t·∫•t c·∫£ c√°c items trong danh s√°ch y√™u th√≠ch v√† c·∫≠p nh·∫≠t favoriteCount c·ªßa b√†i vi·∫øt
//     for (const item of this.items) {
//         const model = mongoose.model(item.postType);
//         await model.findByIdAndUpdate(item.postId, { $inc: { favoriteCount: -1 } });
//     }
//     next();
// });

// üî• Middleware: Khi th√™m v√†o FavoriteList, c·∫≠p nh·∫≠t `favoriteCount` trong b√†i vi·∫øt
FavoriteListSchema.post("save", async function (doc) {
    for (const item of doc.items) {
        const model = mongoose.model(item.postType);
        await model.findByIdAndUpdate(item.postId, { $inc: { favoriteCount: 1 } });
    }
});

// üî• Middleware: Khi x√≥a m·ªôt danh s√°ch, gi·∫£m `favoriteCount` c·ªßa c√°c b√†i vi·∫øt
FavoriteListSchema.pre("remove", async function (next) {
    for (const item of this.items) {
        const model = mongoose.model(item.postType);
        await model.findByIdAndUpdate(item.postId, { $inc: { favoriteCount: -1 } });
    }
    next();
});
export default mongoose.model("FavouriteList", FavoriteListSchema);
